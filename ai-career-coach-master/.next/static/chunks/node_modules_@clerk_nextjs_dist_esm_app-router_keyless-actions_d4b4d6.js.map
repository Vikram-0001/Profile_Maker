{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HP/Desktop/Mini%20Project/SENS%20AI/ai-career-coach-master/node_modules/%40clerk/nextjs/dist/esm/app-router/keyless-actions.js"],"sourcesContent":["\"use server\";\nimport { cookies, headers } from \"next/headers\";\nimport { redirect, RedirectType } from \"next/navigation\";\nimport { detectClerkMiddleware } from \"../server/headers-utils\";\nimport { getKeylessCookieName } from \"../server/keyless\";\nimport { canUseKeyless__server } from \"../utils/feature-flags\";\nasync function syncKeylessConfigAction(args) {\n  const { claimUrl, publishableKey, secretKey, returnUrl } = args;\n  const cookieStore = await cookies();\n  cookieStore.set(getKeylessCookieName(), JSON.stringify({ claimUrl, publishableKey, secretKey }), {\n    secure: true,\n    httpOnly: true\n  });\n  const request = new Request(\"https://placeholder.com\", { headers: await headers() });\n  if (detectClerkMiddleware(request)) {\n    redirect(`/clerk-sync-keyless?returnUrl=${returnUrl}`, RedirectType.replace);\n    return;\n  }\n  return;\n}\nasync function createOrReadKeylessAction() {\n  if (!canUseKeyless__server) {\n    return null;\n  }\n  const result = await import(\"../server/keyless-node.js\").then((m) => m.createOrReadKeyless());\n  if (!result) {\n    return null;\n  }\n  const { claimUrl, publishableKey, secretKey, apiKeysUrl } = result;\n  void (await cookies()).set(getKeylessCookieName(), JSON.stringify({ claimUrl, publishableKey, secretKey }), {\n    secure: false,\n    httpOnly: false\n  });\n  return {\n    claimUrl,\n    publishableKey,\n    apiKeysUrl\n  };\n}\nexport {\n  createOrReadKeylessAction,\n  syncKeylessConfigAction\n};\n"],"names":[],"mappings":";;;;;;IAwCE;IACA","ignoreList":[0]}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}